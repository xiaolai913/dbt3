#!/bin/bash
#
# This file is released under the terms of the Artistic License.
# Please see the file LICENSE, included in this package, for details.
#
# Copyright (C) 2002-2006 Jenny Zhang & Open Source Development Labs, Inc.
#

# 15 July 2004 - Revamped by Mark Wong

DIR=`dirname $0`
. ${DIR}/pgsql_profile || exit 1

SRCDIR=${DBT3_HOME}

DBSCRIPTDIR=$SRCDIR/scripts/pgsql

DBSTATS="$DBSCRIPTDIR/db_stats.sh"

clearprof () {
	sudo /usr/sbin/readprofile -m /boot/System.map-`uname -r` -r
}

getprof () {
	sudo /usr/sbin/readprofile -n -m /boot/System.map-`uname -r` -v | sort -grk3,4 > $OUTPUT_DIR/readprofile.txt
}

clearoprof () {
	sudo opcontrol --vmlinux=/boot/vmlinux
	sleep 2
	sudo opcontrol --start-daemon
	sleep 2
	sudo opcontrol --start
	sleep 2
	# If opcontrol ever gets stuck here, sometimes it helps to remove
	# everything in this dir:
	# /var/lib/oprofile
	sudo opcontrol --reset
}

getoprof () {
	mkdir -p $OUTPUT_DIR/oprofile/annotate
	sudo opcontrol --dump
	sudo opreport -l -o $OUTPUT_DIR/oprofile/oprofile.txt
	sudo opcontrol --stop
	sudo opcontrol --shutdown
	sudo opannotate --source --assembly > $OUTPUT_DIR/oprofile/assembly.txt 2>&1
	sudo opannotate --source --output-dir=$OUTPUT_DIR/oprofile/annotate
	sudo opreport -l -c -p /lib/modules/`uname -r` -o ${OUTPUT_DIR}/oprofile/call-graph.txt > /dev/null 2>&1
}

PARAMETERS=""
SF=0
USE_OPROFILE=0
GENERATE=0
ONLY_LOAD=0
DBDATA=${DSS_PATH}
while getopts "d:f:g:lo:p:tyz:" opt; do
	case $opt in
	d)
		DBDATA=${OPTARG}
		export DSS_PATH=$DBDATA
		mkdir -p $DSS_PATH
		;;
	f)
		SF=$OPTARG
		;;
	g)
		GENERATE=$OPTARG
		;;
	l)
		ONLY_LOAD=1
		;;
	o)
		OUTPUT_DIR=$OPTARG
		mkdir -p $OUTPUT_DIR
		;;
	p)
		PARAMETERS="${LOAD_PARAMETERS} $OPTARG"
		;;
	t)
		TABLESPACE_FLAG="-t -b"
		;;
	y)
		USE_OPROFILE=1
		;;
	z)
		DBPORT=$OPTARG
		;;
	?)
		echo "Usage: $0 [-o <dir> -p <db_param> -f <scale_factor>]"
		exit 1
	esac
done

if test -z $OUTPUT_DIR ; then 
  OUTPUT_DIR=$DBSCRIPTDIR/output
  mkdir -p $OUTPUT_DIR
fi

# Check to see if we have the files. If we don't have them - create them. 
have_all_files=0
for f in customer lineitem  nation  orders  partsupp  part  region  supplier ; do
    if ! test -f $DSS_PATH/$f.tbl ; then
        have_all_files=1
    fi
done

if [ $GENERATE -ne 0 -o $have_all_files -eq 1 ]; then
	echo "Generating data for scale factor $SF..."
	date
	# DBGEN reads DSS_PATH env var to determine where to put the files
	${DBGEN} -s $SF || exit 1
	chmod a+r ${DSS_PATH}/*.tbl
	date
else
	echo "Create the database using existing datafiles."
fi

# Initialize profile counters.
if [ -f /proc/profile ]; then
	clearprof
fi

if [ $USE_OPROFILE -eq 1 ]; then
	clearoprof
fi

# Start collecting system statistics.
$SRCDIR/scripts/dbt3-sysstats --outdir $OUTPUT_DIR --iter $STAT_ITER --sample $STAT_SAMPLE || exit 1

$DBSCRIPTDIR/dbt3-pgsql-create-db -o ${OUTPUT_DIR} -l ${DBPORT} -p "${PARAMETERS}"
	
date
${DBSCRIPTDIR}/dbt3-pgsql-drop-tables -l ${DBPORT}
${DBSCRIPTDIR}/dbt3-pgsql-create-tables -d ${DBDATA} -l ${DBPORT} ${TABLESPACE_FLAG} || exit 1
date

echo "`date +'%Y-%m-%d %H:%M:%S'` Starting Load Test..."
s_time=`$GTIME`
$DBSCRIPTDIR/dbt3-pgsql-time-statistics -s -l ${DBPORT} -n "LOAD" || exit 1

# Collect database statistics
${DBSTATS} ${OUTPUT_DIR} ${DBPORT} &

${DBSCRIPTDIR}/dbt3-pgsql-load-data -d ${DBDATA} || exit 1

if [ ${ONLY_LOAD} -eq 0 ]; then
	date
	$DBSCRIPTDIR/dbt3-pgsql-create-indexes -l ${DBPORT} ${TABLESPACE_FLAG} || exit 1
	date
fi

$DBSCRIPTDIR/dbt3-pgsql-time-statistics -e -l ${DBPORT} -n "LOAD" || exit 1
e_time=`$GTIME`
echo "`date +'%Y-%m-%d %H:%M:%S'` Load Test Completed"
diff_time=`expr $e_time - $s_time`
echo "Elapsed time for Load Test : $diff_time seconds"

# Stop collecting system statistics.
$SRCDIR/scripts/dbt3-sysstats --stop

# Collect profile data.
if [ -f /proc/profile ]; then
	profname='Load_Test'
	getprof
fi

if [ $USE_OPROFILE -eq 1 ]; then
	profname='Load_Test'
	getoprof
fi

exit 0
